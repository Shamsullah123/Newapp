{"version":3,"sources":["HeaderComponent/Header.js","HeaderComponent/todolist.js","HeaderComponent/Textarea.js","HeaderComponent/Altert.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","mode","href","title","type","color","id","role","htmlFor","onClick","toggleMode","defaultProps","Todolist","Textarea","useState","text","setText","style","heading","value","rows","onChange","event","console","log","target","backgroundColor","newtext","toUpperCase","showaltert","toLocaleLowerCase","split","reverse","join","length","Altert","alert","word","lower","toLowerCase","charAt","slice","capitalize","msg","App","setmode","altert","setaltert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f88474d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { a } from \"react-router-dom\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n          color=\"green\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Red Color Mode\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === `light` ? `dark` : `light`\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: \"text title here\",\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Todolist = () => {\r\n  return <div>Testing</div>;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const [text, setText] = useState(\"Enter Text\");\r\n\r\n  const handleUpClick = () => {\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showaltert(\"converted to Upper Case\", \"success\");\r\n  };\r\n  const handleLowerClick = () => {\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newtext = text.toLocaleLowerCase();\r\n    setText(newtext);\r\n    props.showaltert(\"converted to Lower Case\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n  };\r\n  const handleReviseClick = () => {\r\n    console.log(\"Upper case was clicked\" + text);\r\n    let newtext = text.split(\"\").reverse().join(\"\");\r\n    setText(newtext);\r\n  };\r\n  const handleTextChange = (event) => {\r\n    console.log(\"onChanged\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === `dark` ? `white` : `black`,\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            value={text}\r\n            rows=\"8\"\r\n            onChange={handleTextChange}\r\n            style={{\r\n              backgroundColor: props.mode === `dark` ? `grey` : `white`,\r\n              color: props.mode === `dark` ? `white` : `black`,\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary btn-outline-success\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert into Upper case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>\r\n          Convert into Lower case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          CLEAR\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleReviseClick}>\r\n          Revise your TEXT\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === `dark` ? `white` : `black`,\r\n        }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} Words and {text.length} Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p> {text} </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Altert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Altert;\r\n","import \"./App.css\";\n// import Person from \"./Person/Person\";\nimport { Component, useState } from \"react\";\n// import person from \"./Person/Person\";\n// import { render } from \"@testing-library/react\";\nimport Header from \"./HeaderComponent/Header\";\nimport { Todolist } from \"./HeaderComponent/todolist\";\n// import { Footer } from \"./HeaderComponent/Footer\";\nimport Textarea from \"./HeaderComponent/Textarea\";\n// import About from \"./HeaderComponent/About\";\nimport Altert from \"./HeaderComponent/Altert\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(`light`); // whether dark mode is enable or not\n  const [altert, setaltert] = useState(null);\n  const showaltert = (message, type) => {\n    setaltert({\n      msg: message,\n      type: type,\n    });\n  };\n  setTimeout(() => {\n    setaltert(null);\n  }, 1500);\n  const toggleMode = () => {\n    if (mode === `light`) {\n      setmode(`dark`);\n      document.body.style.backgroundColor = `grey`;\n      showaltert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtile-Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtile is Amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"TextUtile Install Now\";\n      // }, 1500);\n    } else {\n      setmode(`light`);\n      document.body.style.backgroundColor = `white`;\n      showaltert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtile-Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Header title=\"My Text App\" mode={mode} toggleMode={toggleMode} />;\n      <Altert alert={altert} />\n      <Todolist />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\"> */}\n        <Textarea\n          showaltert={showaltert}\n          heading=\"Enter Text to Analized\"\n          mode={mode}\n        />\n        {/* </Route>\n          </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}